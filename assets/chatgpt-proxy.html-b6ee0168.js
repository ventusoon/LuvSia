import{_ as l}from"./1-5a2eb01e.js";import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as r,a as e,b as a,d as s,e as d,f as i}from"./app-7cfffdc2.js";const p={},u=e("blockquote",null,[e("p",null,[e("em",null,[e("strong",null,"構建ChatGPT反向代理")])])],-1),m=e("em",null,"ChatGPT-Web",-1),v={href:"https://github.com/linweiyuan/go-chatgpt-api",target:"_blank",rel:"noopener noreferrer"},h=e("img",{src:"https://img.shields.io/badge/github-go--chatgpt--api-pink",alt:"go-chatgpt-api",loading:"lazy"},null,-1),b=i(`<h2 id="構建步驟" tabindex="-1"><a class="header-anchor" href="#構建步驟" aria-hidden="true">#</a> 構建步驟</h2><h3 id="一、安裝docker及docker-compose" tabindex="-1"><a class="header-anchor" href="#一、安裝docker及docker-compose" aria-hidden="true">#</a> 一、安裝<em>Docker</em>及<em>Docker-compose</em></h3><ul><li>安裝<em>Docker</em></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 更新並安裝必要的軟體</span>

<span class="token function">apt-get</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">wget</span> <span class="token function">nano</span>

<span class="token comment"># 安裝Docker</span>

<span class="token function">curl</span> <span class="token parameter variable">-sSL</span> https://get.docker.com/ <span class="token operator">|</span> <span class="token function">sh</span>

<span class="token comment"># 開機自動啟動</span>

systemctl start <span class="token function">docker</span>
systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>安裝<em>Docker-compose</em></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">curl</span> <span class="token parameter variable">-L</span> <span class="token string">&quot;https://github.com/docker/compose/releases/download/v2.22.0/docker-compose-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> <span class="token parameter variable">-s</span><span class="token variable">)</span></span>-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> <span class="token parameter variable">-m</span><span class="token variable">)</span></span>&quot;</span> <span class="token parameter variable">-o</span> /usr/local/bin/docker-compose
<span class="token function">sudo</span> <span class="token function">chmod</span> +x /usr/local/bin/docker-compose
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,6),g={id:"二、安裝go-chatgpt-api",tabindex:"-1"},k=e("a",{class:"header-anchor",href:"#二、安裝go-chatgpt-api","aria-hidden":"true"},"#",-1),_={href:"https://github.com/linweiyuan/go-chatgpt-api",target:"_blank",rel:"noopener noreferrer"},f=e("em",null,"go-chatgpt-api",-1),x=i(`<ul><li>創建目錄</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/docker_data/go-chatgpt-api
<span class="token builtin class-name">cd</span> /data/docker_data/go-chatgpt-api
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>創建<em>docker-compose.yml</em>文件</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">nano</span> docker-compose.yml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>在文件中填入以下內容，然後按<em>Ctrl+X</em>保存，按<em>Y</em>退出</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>version: <span class="token string">&quot;3&quot;</span>
services:
  go-chatgpt-api:
    container_name: go-chatgpt-api
    image: linweiyuan/go-chatgpt-api
    ports:
      - <span class="token number">8080</span>:8080  <span class="token comment"># 容器端口映射到宿主機8080端口；宿主機監聽端口可按需改為其他端口</span>
    environment:
      - <span class="token assign-left variable">GIN_MODE</span><span class="token operator">=</span>release
      - <span class="token assign-left variable">CHATGPT_PROXY_SERVER</span><span class="token operator">=</span>http://chatgpt-proxy-server:9515
      <span class="token comment">#- NETWORK_PROXY_SERVER=http://host:port     # NETWORK_PROXY_SERVER：科學上網代理地址，例如：http://10.0.5.10:7890</span>
      <span class="token comment">#- NETWORK_PROXY_SERVER=socks5://host:port   # NETWORK_PROXY_SERVER：科學上網代理地址</span>
    depends_on:
      - chatgpt-proxy-server
    restart: unless-stopped

  chatgpt-proxy-server:
    container_name: chatgpt-proxy-server
    image: linweiyuan/chatgpt-proxy-server
    restart: unless-stopped
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>創建完成後，運行</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>檢查運行的容器；確保容器狀態為UP</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">ps</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>檢測容器映射到宿主機的監聽端口是否監聽</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ss -tnlp<span class="token operator">|</span><span class="token function">grep</span> <span class="token number">8080</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="三、使用自建反代" tabindex="-1"><a class="header-anchor" href="#三、使用自建反代" aria-hidden="true">#</a> 三、使用自建反代</h3>`,13),y=e("em",null,"access token",-1),R={href:"http://ip:8080/conversation",target:"_blank",rel:"noopener noreferrer"},E=e("em",null,"ip",-1),P=e("em",null,"nginx",-1),T=e("em",null,"ip",-1),O={href:"https://example.com/conversation",target:"_blank",rel:"noopener noreferrer"},V=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 反向代理，可選</span>
API_REVERSE_PROXY: https://example.com/conversation
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>現在我們訪問chatgpt-web，查看是否可以正常使用，注意確保<em>chatgpt-proxy-server</em>運行正常，<em>go-chatgpt-api</em>需要初始化啟動需要耐心等待</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看容器日誌是否運行正常</span>
<span class="token function">docker</span> logs <span class="token parameter variable">-f</span> chatgpt-proxy-server
<span class="token function">docker</span> logs <span class="token parameter variable">-f</span> go-chatgpt-api
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="完工" tabindex="-1"><a class="header-anchor" href="#完工" aria-hidden="true">#</a> 完工</h2><figure><img src="`+l+'" alt="1" tabindex="0" loading="lazy"><figcaption>😏</figcaption></figure>',5),N={id:"教程來源",tabindex:"-1"},C=e("a",{class:"header-anchor",href:"#教程來源","aria-hidden":"true"},"#",-1),S={href:"https://github.com/dqzboy/ChatGPT-Porxy",target:"_blank",rel:"noopener noreferrer"},q=e("img",{src:"https://img.shields.io/badge/github-dqzboy/ChatGPT--Porxy-lemonchiffon",alt:"ChatGPT--Porxy",loading:"lazy"},null,-1);function w(G,X){const n=o("ExternalLinkIcon");return c(),r("div",null,[u,e("ul",null,[e("li",null,[m,a("項目的免費代理已經失效，故此，選擇本項目 "),e("a",v,[h,s(n)]),a(" 來解決代理問題。")])]),d(" more "),b,e("h3",g,[k,a(" 二、安裝"),e("a",_,[f,s(n)])]),x,e("ul",null,[e("li",null,[a("使用 "),y,a(" 模式，使用我們自建的代理地址進行訪問；自建IP的訪問地址為 "),e("em",null,[e("a",R,[a("http://ip:8080/conversation"),s(n)])]),a("；如果不想讓 "),E,a(" 暴露，可以用 "),P,a(" 再反代 "),T,a(" +端口，"),e("em",null,[e("a",O,[a("https://example.com/conversation"),s(n)])]),a(" 。")])]),V,e("h2",N,[C,a(" 教程來源: "),e("a",S,[q,s(n)])])])}const I=t(p,[["render",w],["__file","chatgpt-proxy.html.vue"]]);export{I as default};
