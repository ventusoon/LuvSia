const e=JSON.parse(`{"key":"v-35fb445f","path":"/en/code/ddns.html","title":"Using DDNS to Achieve Remote Access to Devices on an Internal Network","lang":"en-US","frontmatter":{"icon":"pen-to-square","title":"Using DDNS to Achieve Remote Access to Devices on an Internal Network","date":"2023-03-27T13:22:22.000Z","author":["Ven2s"],"tag":["DDNS","Network"],"category":["Home Network Layout"],"description":"Using DDNS and Port Forwarding to achieve remote access to devices on an internal network Introduction Recently, I got into an AI drawing software called stable-diffusion-webui. Due to its heavy reliance on GPU, I could only use my home computer for this purpose (which has a 6-year-old GTX 1060ðŸ˜¥). However, as I work remotely, I decided to explore the realm of Dynamic Domain Name System (DDNS) to achieve remote control of my home computer and other network devices. This tutorial (memo) serves two purposes: to showcase achievements and to provide guidance for others with similar needs. Many tutorials I found didn't explain DDNS clearly or how to use it. DDNS (Dynamic Domain Name System) is a service that maps the dynamic IPv4 address of a home network to a fixed domain name resolution service. Cloudflare is a globally renowned DNS service provider. DDNS-GO is an excellent DDNS resolution service tool. Many thanks to the author for solving my crucial problem. Public IP - I must say, the service level of the telecom company is impressive. They provided me with a public IP within half a day. Although there are many ways to bypass the public IP for accessing the internal network, through my testing, using more advanced methods like remote connection services and tunneling tools, the most straightforward method still offers the best cost-effectiveness and user experience. You can see the latency here is very low","head":[["link",{"rel":"alternate","hreflang":"zh-tw","href":"https://luvsia.com/code/ddns.html"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://luvsia.com/zh/code/ddns.html"}],["meta",{"property":"og:url","content":"https://luvsia.com/en/code/ddns.html"}],["meta",{"property":"og:site_name","content":"SpringVen2s"}],["meta",{"property":"og:title","content":"Using DDNS to Achieve Remote Access to Devices on an Internal Network"}],["meta",{"property":"og:description","content":"Using DDNS and Port Forwarding to achieve remote access to devices on an internal network Introduction Recently, I got into an AI drawing software called stable-diffusion-webui. Due to its heavy reliance on GPU, I could only use my home computer for this purpose (which has a 6-year-old GTX 1060ðŸ˜¥). However, as I work remotely, I decided to explore the realm of Dynamic Domain Name System (DDNS) to achieve remote control of my home computer and other network devices. This tutorial (memo) serves two purposes: to showcase achievements and to provide guidance for others with similar needs. Many tutorials I found didn't explain DDNS clearly or how to use it. DDNS (Dynamic Domain Name System) is a service that maps the dynamic IPv4 address of a home network to a fixed domain name resolution service. Cloudflare is a globally renowned DNS service provider. DDNS-GO is an excellent DDNS resolution service tool. Many thanks to the author for solving my crucial problem. Public IP - I must say, the service level of the telecom company is impressive. They provided me with a public IP within half a day. Although there are many ways to bypass the public IP for accessing the internal network, through my testing, using more advanced methods like remote connection services and tunneling tools, the most straightforward method still offers the best cost-effectiveness and user experience. You can see the latency here is very low"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-TW"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-11T11:59:20.000Z"}],["meta",{"property":"article:author","content":"Ven2s"}],["meta",{"property":"article:tag","content":"DDNS"}],["meta",{"property":"article:tag","content":"Network"}],["meta",{"property":"article:published_time","content":"2023-03-27T13:22:22.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-11T11:59:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Using DDNS to Achieve Remote Access to Devices on an Internal Network\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-27T13:22:22.000Z\\",\\"dateModified\\":\\"2023-11-11T11:59:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ven2s\\"}]}"]]},"headers":[{"level":2,"title":"Getting Started","slug":"getting-started","link":"#getting-started","children":[]},{"level":2,"title":"Let's Begin","slug":"let-s-begin","link":"#let-s-begin","children":[]},{"level":2,"title":"Take some time to record how to effectively forward ports to prevent me from forgetting again","slug":"take-some-time-to-record-how-to-effectively-forward-ports-to-prevent-me-from-forgetting-again","link":"#take-some-time-to-record-how-to-effectively-forward-ports-to-prevent-me-from-forgetting-again","children":[]}],"git":{"createdTime":1698956907000,"updatedTime":1699703960000,"contributors":[{"name":"ventusoon","email":"sia@ik.me","commits":3}]},"readingTime":{"minutes":2.79,"words":837},"filePathRelative":"en/code/ddns.md","localizedDate":"March 27, 2023","excerpt":"<blockquote>\\n<p><em><strong>Using DDNS and Port Forwarding to achieve remote access to devices on an internal network</strong></em></p>\\n</blockquote>\\n<h1> Introduction</h1>\\n<ul>\\n<li>\\n<p><strong>Recently, I got into an AI drawing software called <em><code>stable-diffusion-webui</code></em>. Due to its heavy reliance on <em><code>GPU</code></em>, I could only use my home computer for this purpose (which has a 6-year-old GTX 1060ðŸ˜¥). However, as I work remotely, I decided to explore the realm of Dynamic Domain Name System (DDNS) to achieve remote control of my home computer and other network devices.</strong></p>\\n<p><img src=\\"/images/DDNS/Z.jpg\\" alt=\\"Z\\" title=\\":smirk:\\" loading=\\"lazy\\"><br>\\n<img src=\\"/images/DDNS/B.jpg\\" alt=\\"D\\" title=\\":smirk:\\" loading=\\"lazy\\"><br>\\n<img src=\\"/images/DDNS/0.jpg\\" alt=\\"B\\" title=\\":smirk:\\" loading=\\"lazy\\"></p>\\n</li>\\n<li>\\n<p><strong>This tutorial (memo) serves two purposes: to showcase achievements and to provide guidance for others with similar needs. Many tutorials I found didn't explain DDNS clearly or how to use it.</strong></p>\\n</li>\\n<li>\\n<p><a href=\\"https://en.wikipedia.org/wiki/Dynamic_DNS\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><em>DDNS</em></a> (Dynamic Domain Name System) is a service that maps the dynamic <em>IPv4</em> address of a home network to a fixed domain name resolution service.</p>\\n</li>\\n<li>\\n<p><a href=\\"https://www.cloudflare.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><em>Cloudflare</em></a> is a globally renowned DNS service provider.</p>\\n</li>\\n<li>\\n<p><a href=\\"https://github.com/jeessy2/ddns-go\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><em>DDNS-GO</em></a> is an excellent DDNS resolution service tool. Many thanks to the author for solving my crucial problem.</p>\\n</li>\\n<li>\\n<p><a href=\\"https://en.wikipedia.org/wiki/IP_address\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Public IP</a> - I must say, the service level of the telecom company is impressive. They provided me with a public <em><code>IP</code></em> within half a day. Although there are many ways to bypass the public <em><code>IP</code></em> for accessing the internal network, through my testing, using more advanced methods like remote connection services and tunneling tools, the most straightforward method still offers the best cost-effectiveness and user experience.</p>\\n<figure><img src=\\"/images/DDNS/1.png\\" alt=\\"RDP\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>You can see the latency here is very low</figcaption></figure>\\n</li>\\n</ul>","autoDesc":true}`);export{e as data};
